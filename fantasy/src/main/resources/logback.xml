<configuration scan="true" scanPeriod="300 seconds" debug="false">
    <property resource="logback.properties"/>
    <contextName>${context.name}</contextName>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
    </appender>

    <!-- error log config -->
    <appender name="root-file-error"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/error.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.dir}/error.%d{${rolling.policy.file.name.pattern}}.%i.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- warn log config -->
    <appender name="root-file-warn"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/warn.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.dir}/warn.%d{${rolling.policy.file.name.pattern}}.%i.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>warn</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- info log config -->
    <appender name="root-file-info"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/info.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.dir}/info.%d{${rolling.policy.file.name.pattern}}.%i.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

    <!-- debug log config -->
    <appender name="root-file-debug"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/debug.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${log.dir}/debug.%d{${rolling.policy.file.name.pattern}}.%i.zip
            </fileNamePattern>
            <timeBasedFileNamingAndTriggeringPolicy
                    class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${max.file.size}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
            <maxHistory>${max.history}</maxHistory>
        </rollingPolicy>
        <encoder>
            <pattern>${conversion.pattern}</pattern>
        </encoder>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>debug</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <root level="${root.level}">
        <appender-ref ref="console"/>
        <appender-ref ref="root-file-error"/>
        <appender-ref ref="root-file-warn"/>
        <appender-ref ref="root-file-info"/>
        <appender-ref ref="root-file-debug"/>
    </root>

    <!-- 跟踪客户端行为 -->
    <appender name="client-trace-log-appender" class="ch.qos.logback.classic.sift.SiftingAppender">
        <discriminator>
            <Key>client</Key>
            <DefaultValue>unknown</DefaultValue>
        </discriminator>
        <sift>
            <appender name="${client}" class="ch.qos.logback.core.rolling.RollingFileAppender">
                <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
                    <fileNamePattern>${log.dir}/client-trace/${client}_%d{yyyyMMdd}.log</fileNamePattern>
                    <maxFileSize>${max.file.size}</maxFileSize>
                </rollingPolicy>
                <Append>false</Append>
                <layout class="ch.qos.logback.classic.PatternLayout">
                    <pattern>%m%n</pattern>
                </layout>
            </appender>
        </sift>
    </appender>

    <logger name="client-trace-log" additivity="false">
        <level value="info"/>
        <appender-ref ref="client-trace-log-appender"/>
    </logger>

</configuration>